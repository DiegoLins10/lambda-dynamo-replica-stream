name: Deploy Lambda with Terraform

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          cd infra
          terraform init

      - name: Terraform Validate
        run: |
          cd infra
          terraform validate

      - name: Terraform Destroy (Optional)
        run: |
          cd infra
          terraform destroy -auto-approve || echo "No resources to destroy"

      - name: Copy Lambda function to Terraform directory
        run: |
          cp app/lambda_function.py infra/lambda_function.py

      - name: Import IAM Role if not in state
        run: |
          cd infra
          terraform state list | grep aws_iam_role.lambda_exec_role || terraform import aws_iam_role.lambda_exec_role lambda_exec_role || echo "IAM Role not found for import"

      - name: Import Lambda function if not in state
        run: |
          cd infra
          terraform state list | grep aws_lambda_function.hello_lambda || terraform import aws_lambda_function.hello_lambda lambda-dynamo-replica-stream || echo "Lambda not found for import"

      - name: Import Event Source Mapping if not in state
        run: |
          cd infra
          EVENT_SOURCE_UUID=$(terraform state list | grep aws_lambda_event_source_mapping.dynamodb_stream_trigger || echo "Mapping not found")
          if [[ "$EVENT_SOURCE_UUID" != "Mapping not found" ]]; then
            # Import the existing Event Source Mapping using the UUID
            terraform import aws_lambda_event_source_mapping.dynamodb_stream_trigger $EVENT_SOURCE_UUID || echo "Event source mapping not found for import"
          else
            echo "Event Source Mapping does not exist"
          fi

      - name: Terraform Plan
        run: |
          cd infra
          terraform plan

      - name: Terraform Apply
        run: |
          cd infra
          terraform apply -auto-approve
